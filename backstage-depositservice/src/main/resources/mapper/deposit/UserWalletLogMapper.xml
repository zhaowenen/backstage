<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baojia.backstage.depositservice.modules.deposit.dao.UserWalletLogMapper" >

    <resultMap id="BaseResultMap" type="com.baojia.backstage.depositsdk.service.models.UserWalletLog" >
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT" />
        <result column="recharge_status" property="rechargeStatus" jdbcType="INTEGER" />
        <result column="deposit_amount" property="depositAmount" jdbcType="DECIMAL" />
        <result column="deposit_amount_change" property="depositAmountChange" jdbcType="DECIMAL" />
        <result column="lock_status" property="lockStatus" jdbcType="INTEGER" />
        <result column="deposit_from" property="depositFrom" jdbcType="INTEGER" />
        <result column="deposit_time" property="depositTime" jdbcType="TIMESTAMP" />
        <result column="city_code" property="cityCode" jdbcType="VARCHAR" />
        <result column="ad_code" property="adCode" jdbcType="VARCHAR" />
        <result column="mi_coin_amount" property="miCoinAmount" jdbcType="DECIMAL" />
        <result column="mi_coin_amount_change" property="miCoinAmountChange" jdbcType="DECIMAL" />
        <result column="recharge_amount" property="rechargeAmount" jdbcType="DECIMAL" />
        <result column="recharge_amount_change" property="rechargeAmountChange" jdbcType="DECIMAL" />
        <result column="give_amount" property="giveAmount" jdbcType="DECIMAL" />
        <result column="give_amount_change" property="giveAmountChange" jdbcType="DECIMAL" />
        <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="INTEGER" />
        <result column="del_flag" property="delFlag" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
        <result column="remarks" property="remarks" jdbcType="VARCHAR" />
        <result column="operate_user" property="operateUser" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, user_id, recharge_status, deposit_amount, deposit_amount_change, lock_status, 
        deposit_from, deposit_time, city_code, ad_code, mi_coin_amount, mi_coin_amount_change, 
        recharge_amount, recharge_amount_change, give_amount, give_amount_change, order_no, 
        type, del_flag, create_time, modify_time, remarks, operate_user
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
        select 
        <include refid="Base_Column_List" />
        from user_wallet_log
        where id = #{id,jdbcType=BIGINT}
    </select>
    
    <select id="selectNewColumn" resultMap="BaseResultMap" >
        select 
        <include refid="Base_Column_List" />
        from user_wallet_log
        order by id desc limit 1
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
        delete from user_wallet_log
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.baojia.backstage.depositsdk.service.models.UserWalletLog" >
        insert into user_wallet_log (id, user_id, recharge_status, 
            deposit_amount, deposit_amount_change, lock_status, 
            deposit_from, deposit_time, city_code, 
            ad_code, mi_coin_amount, mi_coin_amount_change, 
            recharge_amount, recharge_amount_change, 
            give_amount, give_amount_change, order_no, 
            type, del_flag, create_time, 
            modify_time, remarks, operate_user)
        values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{rechargeStatus,jdbcType=INTEGER}, 
            #{depositAmount,jdbcType=DECIMAL}, #{depositAmountChange,jdbcType=DECIMAL}, #{lockStatus,jdbcType=INTEGER}, 
            #{depositFrom,jdbcType=INTEGER}, #{depositTime,jdbcType=TIMESTAMP}, #{cityCode,jdbcType=VARCHAR}, 
            #{adCode,jdbcType=VARCHAR}, #{miCoinAmount,jdbcType=DECIMAL}, #{miCoinAmountChange,jdbcType=DECIMAL}, 
            #{rechargeAmount,jdbcType=DECIMAL}, #{rechargeAmountChange,jdbcType=DECIMAL}, 
            #{giveAmount,jdbcType=DECIMAL}, #{giveAmountChange,jdbcType=DECIMAL}, #{orderNo,jdbcType=VARCHAR}, 
            #{type,jdbcType=INTEGER}, #{delFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
            #{modifyTime,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{operateUser,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.baojia.backstage.depositsdk.service.models.UserWalletLog" useGeneratedKeys="true" keyProperty="id" >
        insert into user_wallet_log
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="userId != null" >
                user_id,
            </if>
            <if test="rechargeStatus != null" >
                recharge_status,
            </if>
            <if test="depositAmount != null" >
                deposit_amount,
            </if>
            <if test="depositAmountChange != null" >
                deposit_amount_change,
            </if>
            <if test="lockStatus != null" >
                lock_status,
            </if>
            <if test="depositFrom != null" >
                deposit_from,
            </if>
            <if test="depositTime != null" >
                deposit_time,
            </if>
            <if test="cityCode != null" >
                city_code,
            </if>
            <if test="adCode != null" >
                ad_code,
            </if>
            <if test="miCoinAmount != null" >
                mi_coin_amount,
            </if>
            <if test="miCoinAmountChange != null" >
                mi_coin_amount_change,
            </if>
            <if test="rechargeAmount != null" >
                recharge_amount,
            </if>
            <if test="rechargeAmountChange != null" >
                recharge_amount_change,
            </if>
            <if test="giveAmount != null" >
                give_amount,
            </if>
            <if test="giveAmountChange != null" >
                give_amount_change,
            </if>
            <if test="orderNo != null" >
                order_no,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="delFlag != null" >
                del_flag,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="modifyTime != null" >
                modify_time,
            </if>
            <if test="remarks != null" >
                remarks,
            </if>
            <if test="operateUser != null" >
                operate_user,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=BIGINT},
            </if>
            <if test="userId != null" >
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="rechargeStatus != null" >
                #{rechargeStatus,jdbcType=INTEGER},
            </if>
            <if test="depositAmount != null" >
                #{depositAmount,jdbcType=DECIMAL},
            </if>
            <if test="depositAmountChange != null" >
                #{depositAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="lockStatus != null" >
                #{lockStatus,jdbcType=INTEGER},
            </if>
            <if test="depositFrom != null" >
                #{depositFrom,jdbcType=INTEGER},
            </if>
            <if test="depositTime != null" >
                #{depositTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cityCode != null" >
                #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="adCode != null" >
                #{adCode,jdbcType=VARCHAR},
            </if>
            <if test="miCoinAmount != null" >
                #{miCoinAmount,jdbcType=DECIMAL},
            </if>
            <if test="miCoinAmountChange != null" >
                #{miCoinAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="rechargeAmount != null" >
                #{rechargeAmount,jdbcType=DECIMAL},
            </if>
            <if test="rechargeAmountChange != null" >
                #{rechargeAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="giveAmount != null" >
                #{giveAmount,jdbcType=DECIMAL},
            </if>
            <if test="giveAmountChange != null" >
                #{giveAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="orderNo != null" >
                #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null" >
                #{delFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null" >
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="operateUser != null" >
                #{operateUser,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.baojia.backstage.depositsdk.service.models.UserWalletLog" >
        update user_wallet_log
        <set >
            <if test="userId != null" >
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="rechargeStatus != null" >
                recharge_status = #{rechargeStatus,jdbcType=INTEGER},
            </if>
            <if test="depositAmount != null" >
                deposit_amount = #{depositAmount,jdbcType=DECIMAL},
            </if>
            <if test="depositAmountChange != null" >
                deposit_amount_change = #{depositAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="lockStatus != null" >
                lock_status = #{lockStatus,jdbcType=INTEGER},
            </if>
            <if test="depositFrom != null" >
                deposit_from = #{depositFrom,jdbcType=INTEGER},
            </if>
            <if test="depositTime != null" >
                deposit_time = #{depositTime,jdbcType=TIMESTAMP},
            </if>
            <if test="cityCode != null" >
                city_code = #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="adCode != null" >
                ad_code = #{adCode,jdbcType=VARCHAR},
            </if>
            <if test="miCoinAmount != null" >
                mi_coin_amount = #{miCoinAmount,jdbcType=DECIMAL},
            </if>
            <if test="miCoinAmountChange != null" >
                mi_coin_amount_change = #{miCoinAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="rechargeAmount != null" >
                recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
            </if>
            <if test="rechargeAmountChange != null" >
                recharge_amount_change = #{rechargeAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="giveAmount != null" >
                give_amount = #{giveAmount,jdbcType=DECIMAL},
            </if>
            <if test="giveAmountChange != null" >
                give_amount_change = #{giveAmountChange,jdbcType=DECIMAL},
            </if>
            <if test="orderNo != null" >
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=INTEGER},
            </if>
            <if test="delFlag != null" >
                del_flag = #{delFlag,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="modifyTime != null" >
                modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            </if>
            <if test="remarks != null" >
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="operateUser != null" >
                operate_user = #{operateUser,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.baojia.backstage.depositsdk.service.models.UserWalletLog" >
        update user_wallet_log
        set user_id = #{userId,jdbcType=BIGINT},
            recharge_status = #{rechargeStatus,jdbcType=INTEGER},
            deposit_amount = #{depositAmount,jdbcType=DECIMAL},
            deposit_amount_change = #{depositAmountChange,jdbcType=DECIMAL},
            lock_status = #{lockStatus,jdbcType=INTEGER},
            deposit_from = #{depositFrom,jdbcType=INTEGER},
            deposit_time = #{depositTime,jdbcType=TIMESTAMP},
            city_code = #{cityCode,jdbcType=VARCHAR},
            ad_code = #{adCode,jdbcType=VARCHAR},
            mi_coin_amount = #{miCoinAmount,jdbcType=DECIMAL},
            mi_coin_amount_change = #{miCoinAmountChange,jdbcType=DECIMAL},
            recharge_amount = #{rechargeAmount,jdbcType=DECIMAL},
            recharge_amount_change = #{rechargeAmountChange,jdbcType=DECIMAL},
            give_amount = #{giveAmount,jdbcType=DECIMAL},
            give_amount_change = #{giveAmountChange,jdbcType=DECIMAL},
            order_no = #{orderNo,jdbcType=VARCHAR},
            type = #{type,jdbcType=INTEGER},
            del_flag = #{delFlag,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            modify_time = #{modifyTime,jdbcType=TIMESTAMP},
            remarks = #{remarks,jdbcType=VARCHAR},
            operate_user = #{operateUser,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
</mapper>